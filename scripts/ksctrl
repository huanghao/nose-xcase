#!/bin/bash -eu
PYTHON=python
QUEUES="pending running ok failed canceled"

init() {
    # make queue directories
    env=$1
    mkdir -vp $env/queue
    for path in $QUEUES; do
        mkdir -v $env/queue/$path
    done
    mkdir -vp $env/tmp
    echo "init ok"
}

sync() {
    $(dirname $0)/sync_ks.sh "$@"
}

run() {
    $PYTHON $(dirname $0)/run_ks.py "$@"
}

status() {
    echo "queue length"
    for queue in $(ls queue); do
        printf "%8s: %d\n" $queue $(ls queue/$queue|wc -l 2>/dev/null)
    done
}

report() {
    echo "report" "$@"
}

usage() {
    echo "Control script to download ks and run mic automatically"
    echo "Usage: $0 [-h|--help] ACTION [options]"
    echo
    echo "Available ACTIONs:"
    echo "  init <env>"
    echo "    echo make an env for following steps"
    echo "  sync"
    echo "    download ks from remote repo and push into queue"
    echo "  run"
    echo "    for each ks in queue to run mic"
    echo "  report"
    echo "    make a report for previous steps"
    echo "  status"
    echo "    display status for all queues"
    echo "  go"
    echo "    shortcut for sync && run && report"
}


#### Main
action=$1
shift

case $action in
    init)
        if [ $# -lt 1 ]; then
            echo "env parameter is required"
            exit 1
        fi
        init "$1"
        ;;
    sync)
        sync "$@"
        ;;
    run)
        run "$@"
        ;;
    report)
        report "$@"
        ;;
    status)
        status "$@"
        ;;
    go)
        sync && run && report
        ;;
    -h|--help|"")
        usage
        exit 0
        ;;
    *)
        echo "Invalid action: $action"
        exit 1
        ;;
esac